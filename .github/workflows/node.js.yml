name: CI-CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: install dependencies
        run: |
          npm install
          npm run build
  Test:
    runs-on: ubuntu-latest
    needs: [Build]
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: test
        run: |
          npm test

  Docker:
    runs-on: ubuntu-latest
    needs: [Build, Test]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REACTUSERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REACTUSERNAME }}/frontdevops:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.REACTUSERNAME }}/frontdevops:latest
          run: |
            echo "runing the docker image"
  Deploy:          
    runs-on: ubuntu-latest
    needs: [Docker]
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@canary
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
